apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: visa-privileged
  annotations:
    policies.kyverno.io/title: visa-privileged
    policies.kyverno.io/category: Visa-Custom
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.10.3
    kyverno.io/kubernetes-version: "1.23-1.26"
    policies.kyverno.io/description: >-
      Custom Policy for privileged access deployment at Visa
spec:
  validationFailureAction: Audit
  background: true
  rules:
  - name: securityContext-podlevelvalidation
    match:
      any:
      - resources:
          kinds:
          - Pod
          namespaces:
          - cribl
          - default
          - istio-system
          - jaegar
          - kube-system
          - mks-monitoring
          - minio
          - opera-monitor
          - occ-tempo
          - pingexporter
          - splunk-k8
          - splunk-k8-2
          - thanos
    validate:
      message: "Policy for privileged Access.        "
      anyPattern:
      - spec:
          =(hostNetwork): "true|false"
          =(hostIPC): "true|false"
          =(hostPID): "true|false"
          containers:
          - =(securityContext):
              =(allowPrivilegeEscalation): "true|false"
              =(runAsUser): '*'
              =(seLinuxOptions):
                level: "?*"
            =(ports):
            - =(hostPort): '0-65535'
          =(initContainers):
          - =(securityContext):
              =(allowPrivilegeEscalation): "true|false"
              =(runAsUser): '*'
              =(seLinuxOptions):
                level: "?*"
            =(ports):
            - =(hostPort): '0-65535'
          =(ephemeralContainers):
          - =(securityContext):
              =(allowPrivilegeEscalation): "true|false"
              =(runAsUser): '*'
              =(seLinuxOptions):
                level: "?*"
            =(ports):
            - =(hostPort): '0-65535'
        # spec.securityContext.runAsNonRoot must be set to true. If containers and/or initContainers exist which declare a securityContext field, those must have runAsNonRoot also set to true.
      - spec:
          containers:
          - securityContext:
              =(runAsUser): '*'
              =(allowPrivilegeEscalation): "true|false"
              =(seLinuxOptions):
                level: "?*"
            =(ports):
            - =(hostPort): '0-65535'
          =(initContainers):
          - =(securityContext):
              =(allowPrivilegeEscalation): "true|false"
              =(runAsUser): '*'
              =(seLinuxOptions):
                level: "?*"
            =(ports):
            - =(hostPort): '0-65535'
          =(ephemeralContainers):
          - =(securityContext):
              =(allowPrivilegeEscalation): "true|false"
              =(runAsUser): '*'
              =(seLinuxOptions):
                level: "?*"
            =(ports):
            - =(hostPort): '0-65535'
        # All containers and initContainers must define (not optional) runAsNonRoot=true.
      - spec:
          =(hostNetwork): "true|false"
          =(hostIPC): "true|false"
          =(hostPID): "true|false"
          containers:
          - =(securityContext):
              =(allowPrivilegeEscalation): "true|false"
              =(runAsUser): '*'
              =(seLinuxOptions):
                type: "?*"
            =(ports):
            - =(hostPort): '0-65535'
          =(initContainers):
          - =(securityContext):
              =(allowPrivilegeEscalation): "true|false"
              =(runAsUser): '*'
              =(seLinuxOptions):
                type: "?*"
            =(ports):
            - =(hostPort): '0-65535'
          =(ephemeralContainers):
          - =(securityContext):
              =(allowPrivilegeEscalation): "true|false"
              =(runAsUser): '*'
              =(seLinuxOptions):
                type: "?*"
            =(ports):
            - =(hostPort): '0-65535'
      - spec:
          containers:
          - securityContext:
              =(runAsUser): '*'
              =(allowPrivilegeEscalation): "true|false"
              =(seLinuxOptions):
                type: "?*"
            =(ports):
            - =(hostPort): '0-65535'
          =(initContainers):
          - =(securityContext):
              =(allowPrivilegeEscalation): "true|false"
              =(runAsUser): '*'
              =(seLinuxOptions):
                type: "?*"
            =(ports):
            - =(hostPort): '0-65535'
          =(ephemeralContainers):
          - =(securityContext):
              =(allowPrivilegeEscalation): "true|false"
              =(runAsUser): '*'
              =(seLinuxOptions):
                type: "?*"
            =(ports):
            - =(hostPort): '0-65535'
        # All containers and initContainers must define (not optional) runAsNonRoot=true.
