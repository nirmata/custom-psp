apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: visa-privileged
  annotations:
    policies.kyverno.io/title: visaprivileged
    policies.kyverno.io/category: Visa-Custom
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.10.3
    kyverno.io/kubernetes-version: "1.23-1.26"
    policies.kyverno.io/description: >-
      Custom Policy for privileged access deployment at Visa
spec:
  validationFailureAction: Audit
  background: true
  rules:
    - name: securityContext-podlevelvalidation
      match:
        any:
        - resources:
            kinds:
              - Pod
            namespaces:
              - 0018916-development-business
              - 0018916-development-business-job
              - 0020553-development-business-job
              - 0020553-development-business
              - bookinfo-ew-front
              - bookinfo-front
              - bookinfo
              - cert-manager
              - ddpdev-development-perimeter
              - dfmdev-development-business
              - infra-monitoring
              - infra-test-b
              - infra-test-m  
              - infra-test-p 
              - isilon
              - istio-system 
              - istio-gateway 
              - kube-system 
              - minio-operator 
              - openwhisk
              - prometheus-operator 
              - splunk-k8  
              - tekton-pipelines 
              - vxflexos
              - kuberhealthy 
              - node-problem-detector
      validate:
        message: >-
          Policy for privileged Access.        
        pattern:
          spec:  
            =(hostNetwork): "true|false" 
            =(hostIPC): "true|false" 
            =(hostPID): "true|false"   
            =(securityContext):
              =(runAsUser): "*"
              =(runAsGroup): "*"
              =(fsGroup): "*"
              =(supplementalGroups): "*"
              =(allowPrivilegeEscalation): "true|false"  
              =(privileged): "true|false"
              =(seLinuxOptions):
                =(level): "?*"
    - name: securityContext-containerlevelvalidation
      match:
        any:
        - resources:
            kinds:
              - Pod
            namespaces:
              - 0018916-development-business
              - 0018916-development-business-job
              - 0020553-development-business-job
              - 0020553-development-business
              - bookinfo-ew-front
              - bookinfo-front
              - bookinfo
              - cert-manager
              - ddpdev-development-perimeter
              - dfmdev-development-business
              - infra-monitoring
              - infra-test-b
              - infra-test-m  
              - infra-test-p 
              - isilon
              - istio-system 
              - istio-gateway 
              - kube-system 
              - minio-operator 
              - openwhisk
              - prometheus-operator 
              - splunk-k8  
              - tekton-pipelines 
              - vxflexos
              - kuberhealthy 
              - node-problem-detector
      preconditions:
        all:
        - key: "{{ request.object.spec.securityContext || '' | length(@) }}"
          operator: Equals
          value: 0
      validate:
        message: >-
          Policy for privileged Access. 
        pattern:
          spec:   
            =(ephemeralContainers):          
            - =(securityContext):
                =(allowPrivilegeEscalation): "true|false"  
                =(privileged): "true|false"
                =(seLinuxOptions):
                  =(level): "?*"
              =(ports): 
               - =(hostPort): '0-65535'
            =(initContainers):          
            - =(securityContext):
                =(allowPrivilegeEscalation): "true|false"  
                =(privileged): "true|false"
                =(seLinuxOptions?):
                  =(level): "?*"
              =(ports): 
               - =(hostPort): '0-65535'
            containers:          
            - =(securityContext):
                =(allowPrivilegeEscalation): "true|false"  
                =(privileged): "true|false"
                =(seLinuxOptions):
                  =(level): "?*"          
              =(ports): 
               - =(hostPort): '0-65535'
    - name: host-ports-restriction
      match:
        any:
        - resources:
            kinds:
              - Pod
            namespaces:
              - 0018916-development-business
              - 0018916-development-business-job
              - 0020553-development-business-job
              - 0020553-development-business
              - bookinfo-ew-front
              - bookinfo-front
              - bookinfo
              - cert-manager
              - ddpdev-development-perimeter
              - dfmdev-development-business
              - infra-monitoring
              - infra-test-b
              - infra-test-m  
              - infra-test-p 
              - isilon
              - istio-system 
              - istio-gateway 
              - kube-system 
              - minio-operator 
              - openwhisk
              - prometheus-operator 
              - splunk-k8  
              - tekton-pipelines 
              - vxflexos
              - kuberhealthy 
              - node-problem-detector
      validate:
        message: >-
          Use of host ports is disallowed. The fields spec.containers[*].ports[*].hostPort
          , spec.initContainers[*].ports[*].hostPort, and spec.ephemeralContainers[*].ports[*].hostPort
          must either be unset or set between `0-65535`.          
        pattern:
          spec:
            =(ephemeralContainers):
              - =(ports):
                  - =(hostPort): "0-65535"
            =(initContainers):
              - =(ports):
                  - =(hostPort): "0-65535"
            containers:
              - =(ports):
                  - =(hostPort): "0-65535"
