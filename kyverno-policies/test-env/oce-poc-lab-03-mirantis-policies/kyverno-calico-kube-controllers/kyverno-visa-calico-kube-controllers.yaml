apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: calico-kube-controllers
  annotations:
    policies.kyverno.io/title: calico-kube-controllers
    policies.kyverno.io/category: Visa-Custom
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.9.2
    kyverno.io/kubernetes-version: "1.23-1.26"
    policies.kyverno.io/description: >-
      Custom Policy for calico-kube-controllers deployment at Visa
spec:
  validationFailureAction: Audit
  background: true
  rules:
    - name: securityContext-hostlevelvalidation
      match:
        any:
        - resources:
            kinds:
              - Pod
            namespaces:
              - kyverno
              - nirmata-system
      validate:
        message: >-
          Policy for calico-kube-controllers.        
        anyPattern:
      # spec.securityContext.runAsNonRoot must be set to true. If containers and/or initContainers exist which declare a securityContext field, those must have runAsNonRoot also set to true.
        - spec:
            securityContext:              
              fsGroup: '1-65535'			  
              supplementalGroups: '1-65535'
              =(runAsUser): '1-65535' 			   
            containers:
            - =(securityContext):
                =(allowPrivilegeEscalation): "false"
                =(runAsUser): '1-65535'		
                =(seLinuxOptions):
                  level: "?*"
              =(ports): 
               - =(hostPort): '0-65535'		
            =(initContainers):
            - =(securityContext):
                =(allowPrivilegeEscalation): "false"
                =(runAsUser): '1-65535'		
                =(seLinuxOptions):
                  level: "?*"
              =(ports): 
               - =(hostPort): '0-65535'		                  
            =(ephemeralContainers):
            - =(securityContext):
                =(allowPrivilegeEscalation): "false"
                =(runAsUser): '1-65535'		
                =(seLinuxOptions):
                  level: "?*"				
              =(ports): 
               - =(hostPort): '0-65535'		
      # All containers and initContainers must define (not optional) runAsNonRoot=true.
        - spec:
            containers:
            - securityContext:                
                =(runAsUser): '1-65535'
                =(allowPrivilegeEscalation): "false"
                =(seLinuxOptions):
                  level: "?*"
              =(ports): 
               - =(hostPort): '0-65535'		
            =(initContainers):
            - =(securityContext):
                =(allowPrivilegeEscalation): "false"
                =(runAsUser): '1-65535'		
                =(seLinuxOptions):
                  level: "?*"
              =(ports): 
               - =(hostPort): '0-65535'		
            =(ephemeralContainers):
            - =(securityContext):
                =(allowPrivilegeEscalation): "false"
                =(runAsUser): '1-65535'		
                =(seLinuxOptions):
                  level: "?*"			         
              =(ports): 
               - =(hostPort): '0-65535'		         
    - name: restricted-volumes
      match:
        any:
        - resources:
            kinds:
              - Pod
            namespaces:
              - kyverno
              - nirmata-system
      validate:
        message: >-
          Only the following types of volumes may be used: configMap, downwardAPI,
          emptyDir, persistentVolumeClaim, projected, and secret.          
        deny:
          conditions:
            all:
            - key: "{{ request.object.spec.volumes[].keys(@)[] || '' }}"
              operator: AnyNotIn
              value:
              - name
              - configMap
              - downwardAPI
              - emptyDir
              - persistentVolumeClaim
              - projected
              - secret
              - ''
