apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: visa-privileged
  annotations:
    policies.kyverno.io/title: visa-privileged
    policies.kyverno.io/category: Visa-Custom
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.10.3
    kyverno.io/kubernetes-version: "1.23-1.26"
    policies.kyverno.io/description: >-
      Custom Policy for privileged access deployment at Visa
spec:
  validationFailureAction: Audit
  background: true
  rules:
    - name: securityContext-podlevelvalidation
      match:
        any:
        - resources:
            kinds:
              - Pod
            namespaces:
              - 0070081-k8ssandra1 
              - calico-system
              - central
              - clm
              - deekulka
              - extrahop
              - isilon
              - istio-system
              - kgear-business 
              - kube-system 
              - nbu-restore-test
              - nosql-cass1 
              - portworx
              - prometheus-operator
              - twistlock 
              - vxflexos
              - tigera-system   
              - vmp            
              - netbackup             
      validate:
        message: >-
          Policy for privileged Access.        
        anyPattern:
      # spec.securityContext.runAsNonRoot must be set to true. If containers and/or initContainers exist which declare a securityContext field, those must have runAsNonRoot also set to true.
        - spec:
            =(hostNetwork): "true|false"
            =(hostIPC): "true|false"
            =(hostPID): "true|false" 
            securityContext:              
              fsGroup: '*'			  
              supplementalGroups: '*'
              runAsUser: '*'		   
            containers:
            - =(securityContext):
                =(allowPrivilegeEscalation): "true|false"
                =(runAsUser): '*'	
                =(seLinuxOptions):
                  level: "?*"
              =(ports): 
               - =(hostPort): '0-65535'		
            =(initContainers):
            - =(securityContext):
                =(allowPrivilegeEscalation): "true|false"
                =(runAsUser): '*'	
                =(seLinuxOptions):
                  level: "?*"
              =(ports): 
               - =(hostPort): '0-65535'		
            =(ephemeralContainers):
            - =(securityContext):
                =(allowPrivilegeEscalation): "true|false"
                =(runAsUser): '*'	
                =(seLinuxOptions):
                  level: "?*"				
              =(ports): 
               - =(hostPort): '0-65535'				
      # All containers and initContainers must define (not optional) runAsNonRoot=true.
        - spec:
            containers:
            - securityContext:                
                =(runAsUser): '*'	
                =(allowPrivilegeEscalation): "true|false"
                seLinuxOptions:
                  level: "?*"
              =(ports): 
               - =(hostPort): '0-65535'			
            =(initContainers):
            - =(securityContext):
                =(allowPrivilegeEscalation): "true|false"
                =(runAsUser): '*'	
                =(seLinuxOptions):
                  level: "?*"
              =(ports): 
               - =(hostPort): '0-65535'				
            =(ephemeralContainers):
            - =(securityContext):
                =(allowPrivilegeEscalation): "true|false"
                =(runAsUser): '*'	
                =(seLinuxOptions):
                  level: "?*"				
              =(ports): 
               - =(hostPort): '0-65535'				
