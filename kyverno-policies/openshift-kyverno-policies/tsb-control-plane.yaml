apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: tsb-control-plane
  annotations:
    policies.kyverno.io/title: Disallow Privilege Escalation
    policies.kyverno.io/category: Pod Security Standards (Restricted)
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.9.2
    kyverno.io/kubernetes-version: "1.22-1.23"
    policies.kyverno.io/description: >-
      Privilege escalation, such as via set-user-ID or set-group-ID file mode, should not be allowed.
      This policy ensures the `allowPrivilegeEscalation` field is set to `false`.      
spec:
  validationFailureAction: Enforce
  background: true
  rules:
    - name: tsb-control-plane
      match:
        any:
        - resources:
            kinds:
              - Pod
      validate:
        message: >-
          Policy for TSB controle-plane.         
        pattern:
          spec:
            =(ephemeralContainers):
            - hostNetwork: "false"
              hostPID: "false"
              hostIPC: "false"
              hostPort: 0
              fsGroup: 1000-1400
              runAsUser: 1000-1400
              securityContext:
                allowPrivilegeEscalation: "false"
                allowHostDirVolumePlugin: "false"
                privileged: "false"
                capabilities:
                  drop:
                    - all
                readOnlyRootFilesystem: "false"
                seLinuxContext:
                  type: MustRunAs
                supplementalGroups:
                  type: RunAsAny
            =(initContainers):
            - hostNetwork: "false"
              hostPID: "false"
              hostIPC: "false"
              hostPort: 0
              securityContext:
                allowPrivilegeEscalation: "false"
                allowHostDirVolumePlugin: "false"
                privileged: "false"
                capabilities:
                  drop:
                    - all
                readOnlyRootFilesystem: "false"
                seLinuxContext:
                  type: MustRunAs
                supplementalGroups:
                  type: RunAsAny
            containers:
            - hostNetwork: "false"
              hostPID: "false"
              hostIPC: "false"
              hostPort: 0
              securityContext:
                allowPrivilegeEscalation: "false"
                allowHostDirVolumePlugin: "false"
                privileged: "false"
                capabilities:
                  drop:
                    - all
                readOnlyRootFilesystem: "false"
                seLinuxContext:
                  type: MustRunAs
                supplementalGroups:
                  type: RunAsAny
    - name: restricted-volumes
      match:
        any:
        - resources:
            kinds:
              - Pod
      validate:
        message: >-
          Only the following types of volumes may be used: configMap, downwardAPI,
          emptyDir, persistentVolumeClaim, projected, and secret.          
        deny:
          conditions:
            all:
            - key: "{{ request.object.spec.volumes[].keys(@)[] || '' }}"
              operator: AnyNotIn
              value:
              - configMap
              - downwardAPI
              - emptyDir
              - persistentVolumeClaim
              - projected
              - secret
              - ''
    - name: restrict-users
      match:
        any:
        - resources:
            kinds:
              - Pod
      validate: 
        message: >-
          Invalid User/ServiceAccount.
        anyPattern:
          - spec:
              serviceAccount: \"istio-system*\"
              serviceAccountName: \"istio-system*\"
          - spec:
              serviceAccount: \"kube-system:istio*\"
              serviceAccountName: \"kube-system:istio*\" 
          

