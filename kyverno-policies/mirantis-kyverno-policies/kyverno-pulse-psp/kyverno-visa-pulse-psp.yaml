apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: visa-pulse-psp
  annotations:
    policies.kyverno.io/title: visa-pulse
    policies.kyverno.io/category: Visa-Custom
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.9.2
    kyverno.io/kubernetes-version: "1.23-1.26"
    policies.kyverno.io/description: >-
      Visa pulse Policy      
spec:
  validationFailureAction: Enforce
  background: true
  rules:
    - name: securityContext-hostlevelvalidation
      match:
        any:
        - resources:
            kinds:
              - Pod
      validate:
        message: >-
          Policy for visa pulse Access.        
        pattern:
          spec:            
            securityContext:
              runAsUser: "*"
              fsGroup: "*"
              supplementalGroups: "*"  
            =(ephemeralContainers):          
              securityContext:
                allowPrivilegeEscalation: true
                privileged: true
                seLinuxOptions:
                  level: "?*"
            =(initContainers):          
              securityContext:
                allowPrivilegeEscalation: true
                privileged: true
                seLinuxOptions:
                  level: "?*"
            containers:          
            - securityContext:
                allowPrivilegeEscalation: true
                privileged: true
                seLinuxOptions:
                  level: "?*"          
    - name: required-drop-capabilities
      match:
        any:
        - resources:
            kinds:
              - Pod
      preconditions:
        all:
        - key: "{{ request.operation || 'BACKGROUND' }}"
          operator: NotEquals
          value: DELETE
      validate:
        message: >-
                    Any container needs to have SETPCAP,AUDIT_WRITE,CHOWN,NET_RAW,DAC_OVERRIDE,FOWNER,FSETID,KILL,SETUID,SETGID,NET_BIND_SERVICE,SYS_CHROOT,SETFCAP capabilities.
        foreach:
          - list: request.object.spec.[ephemeralContainers, initContainers, containers][]
            deny:
              conditions:
                any:
                - key: SETPCAP
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: AUDIT_WRITE
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: CHOWN
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: NET_RAW
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: DAC_OVERRIDE
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: FOWNER
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: FSETID
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: KILL
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: SETUID
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: SETGID
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: NET_BIND_SERVICE
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: SYS_CHROOT
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: SETFCAP
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.add[].to_upper(@) || `[]` }}"
                - key: MKNOD
                  operator: AnyNotIn
                  value: "{{ element.securityContext.capabilities.drop[].to_upper(@) || `[]` }}"
    
